; Originally from FyOS v0.02, by fyberoptic http://www.fybertech.net/mailstation/

mailstation_stdio_init:
	xor	a
	ld	(_cursorx), a
	ld	(_cursory), a

	ld	hl, cgafont_dataarea	; find aligned address
	inc	h
	ld	l, 0
	ld	(_cgafont_addr), hl
	ex	de, hl			; copy font data
	ld	hl, cgafont_data
	ld	bc, 2048
	ldir

	ret
;-----------------------------------------------------------------------------
; ClearLCD_Half
;
; Parameters: none
; Destroys: af, bc, de, hl
;
; Clears the LCD half currently in slot4000
;
;-----------------------------------------------------------------------------
ClearLCD_Half:
	ld	b,0x14
ClearLCD_2:
	ld	de,0x4038

	ld	hl, (_p2shadow)
	ld	a,(hl)			; start CAS, toggle bit from shadow P2 byte
	and	0xf7
	ld	(hl),a
	out	(0x02),a

	ld	a,b			; write column-1 to LCD
	dec	a
	ld	(de),a

	ld	hl, (_p2shadow)
	ld	a,(hl)			; end CAS, toggle bit from shadow P2 byte
	or	0x08
	ld	(hl),a
	out	(0x02),a

	push	bc			; preserve our column counter
	ld	hl, 0x4038
	ld	(hl), 0
	ld	de, 0x4039
	ld	bc, 127
	ldir
	pop	bc			; restore column counter

	djnz	ClearLCD_2		; column--, if not zero keep going

	ret



;-----------------------------------------------------------------------------
; ClearLCD()
;
; Parameters: none
;
; Clears the LCD with 0's.
;
;-----------------------------------------------------------------------------
_ClearLCD:
	push	af
	push	bc
	push	de
	push	hl

	in	a, (06)		; Save current	slot4000 device
	push	af

	ld	a,02			; select left half of LCD
	out	(06),a
	call	ClearLCD_Half
	ld	a,04			; select left half of LCD
	out	(06),a
	call	ClearLCD_Half

	pop	af			; Restore slot4000 device
	out	(06), a

	pop	hl
	pop	de
	pop	bc
	pop	af
	ret


multiply:
; multiply h by e and return 16 bit result in hl. The b and d
; register will be zeroed on exit. Requires between 301 and 349
; clock cycles.
;
; This is only used by 'printchar' below.
;
	push	bc
	push	de
	push	af
	ld	d, 0
	ld	l, d
	ld	b, 8
multiply_NEXT:
	add	hl, hl
	jr	nc, multiply_NOADD
	add	hl, de
multiply_NOADD:
	djnz	multiply_NEXT
	pop 	af
	pop 	de
	pop 	bc
	ret


;------------------------------------------------------------------------------
; printchar
;
; Parameters: a = character to print
;
; Prints a character to the screen at the cursorx/cursory position, and increm-
; ents them appropriately.  Interprets carriage returns, line feeds, and back-
; spaces.  Backspace will backtrack to the previous line until it reaches row
; 0.  Line feeds or wrapping that occur on row 15 trigger the 'scrollscreen'
; function.
;
; Called via C's 'putchar' function, above.
;
;------------------------------------------------------------------------------
printchar:

	push	af
	push	bc
	push	de
	push	hl
	push	ix
	push	iy

	cp	10		; new line
	jp	z, printchar_nextline
	cp	13		; carriage return
	jr	z, printchar_carriagereturn
	cp	08		; backspace
	jr	nz, printchar_endspecialcharchecks

	ld	a, (_cursorx)		; handle backspace
	or	a
	jp	z, printchar_backspace_upline
	dec	a
	ld	(_cursorx), a
	jp	printchar_done

printchar_backspace_upline:
	ld	(_cursorx), a
	ld	a, (_cursory)
	cp	0
	jp	z, printchar_done
	dec	a
	ld	(_cursory), a
	ld	a, 39
	ld	(_cursorx), a
	jp	printchar_done


printchar_carriagereturn:
	xor	a
	ld	(_cursorx), a
	jp	printchar_done

printchar_endspecialcharchecks:
	push	af			; save character

	ld	a, (_cursory)
	ld	h, a
	ld	e, 40
	call multiply
	ld	b, 0
	ld	a, (_cursorx)
	ld	c, a
	add	hl,bc			; (y * 40) + x
	ld	bc, _textmodebuffer
	add	hl,bc			; result added	to memory address c010 for buffer

	push	hl			; ix = hl
	pop	ix
	pop	af			; restore character

	ld	(ix), a			; put character in ram location

	; subtract 20 from x. if carry, x is left side of lcd. subtract result from 255 for real column number
	; if right side, subtract 20 again, then subtract result from 255 for column
	ld	a, (_cursorx)
	sub	20
	jr	nc, printchar_rightlcd
	ld	b, a
	in	a, (06)		; save slot4000 device
	ld	d, a
	ld	a, 02
	out	(06), a		; set left half of lcd
	jr	printchar_out
printchar_rightlcd:
	sub	20			; subtract again since right half
	ld	b, a
	in	a, (06)		; save slot4000 device
	ld	d, a
	ld	a, 04
	out	(06), a		; set right half of	lcd

printchar_out:
	ld	a, 255
	sub	b
	ld	b, a			; b is now the	reversed lcd column number

	ld	iy, 0x4038		; lcd viewable start address

	ld	hl, (_p2shadow)
	ld	a,(hl)		; start CAS, toggle bit from shadow P2 byte
	and	0xf7
	ld	(hl),a
	out	(02),a

	ld	a,b			; write column	to LCD
	ld	(iy),a

	ld	hl, (_p2shadow)
	ld	a,(hl)		; end CAS, toggle bit from shadow P2 byte
	or	08
	ld	(hl),a
	out	(02),a

	ld	a, (_cursory)
	sla	a			; a * 8
	sla	a
	sla	a
	ld	b, 0
	ld	c, a
	add	iy, bc			; iy = #4038 + (cursory * 8) = lcd address to put character

	ld	a, (ix)			; retrieve character again
	;ld	hl, #cgafont
	ld	hl, (_cgafont_addr) ; load font base address
	ld	l, a

	ld	b, 8
printchar_charout:
	ld	a, (hl)
	ld	(iy), a			; put character onto screen
	inc	h
	inc	iy
	djnz	printchar_charout


	ld	a, d
	out	(6), a		; restore slot4000 device

	ld	a, (_cursorx)		; inc cursorx, check boundaries
	inc	a
	ld	b, a
	sub	40
	jr	nc, printchar_nextline
	ld	a, b
	ld	(_cursorx), a		; set new cursor position
	jr	printchar_done

printchar_nextline:
	xor	a
	ld	(_cursorx), a
	ld	a, (_cursory)
	inc	a
	ld	b, a
	sub	16
	jr	nc, printchar_firstline
	ld	a, b
	ld	(_cursory), a
	jr	printchar_done

printchar_firstline:
	ld	a, 0
	ld	(_cursory), a
	ld	a, 15
	call	_scrollscreen

printchar_done:
	pop	iy
	pop	ix
	pop	hl
	pop	de
	pop	bc
	pop	af
	ret





;------------------------------------------------------------------------------
; scrollscreen()
;
; Parameters: none
;
; Shifts text buffer '_textmodebuffer' up by one line, then clears the bottom
; line to ascii 0.  It then scrolls the actual LCD, one half at a time, using
; the ScrollCharLCD_Half function above.
;
;------------------------------------------------------------------------------
_scrollscreen:
	push	af
	push	bc
	push	de
	push	hl

	; ld	hl, _textmodebuffer + 40	; copy all lines up by one
	; ld	de, _textmodebuffer
	; ld	bc, 600			; only 600 chars, since skipping top row
	; ldir
	; xor	a				; clear bottom row
; 	ld	(_textmodebuffer + 0d600), a
; 	ld	hl, #_textmodebuffer + #0d600
; 	ld	de, #_textmodebuffer + #0d601
	; ld	bc, 39
	; ldir

	;call _UpdateCharLCD			; This is slow, so we don't do it anymore
	;jr	_scrollscreen_end

	in	a, (06)			; Save current slot4000 device
	push	af

	ld	a,02				; select left half of LCD
	out	(06),a
	call	ScrollCharLCD_Half
	ld	a,04				; select right half of LCD
	out	(06),a
	call	ScrollCharLCD_Half

	pop	af				; Restore slot4000 device
	out	(06), a

_scrollscreen_end:
	pop	hl
	pop	de
	pop	bc
	pop	af
	ret



;-----------------------------------------------------------------------------
; ScrollCharLCD_Half
;
; Parameters: none
; Destroys: af, bc, de, hl
;
; Scrolls LCD half in slot4000 up by 8 pixel rows (aka one char row).
;
;-----------------------------------------------------------------------------
ScrollCharLCD_Half:
	ld	b, 0x14		; do 20 columns total
ScrollCharLCD_2:
	ld	de, 0x4038

	ld	hl, (_p2shadow)
	ld	a,(hl)			; start CAS, toggle bit from shadow P2 byte
	and	0xf7
	ld	(hl),a
	out	(0x02),a

	ld	a,b			; write column-1 to LCD
	dec	a
	ld	(de),a

	ld	hl, (_p2shadow)
	ld	a,(hl)			; end CAS, toggle bit from shadow P2 byte
	or	0x08
	ld	(hl),a
	out	(0x02),a

	push	bc			; preserve our column counter

	ld	hl, 0x4040		; move all rows up one except last
	ld	de, 0x4038
	ld	bc, 120
	ldir

	ld	hl, 0x40B0		; clear last char row
	ld	(hl), 0
	ld	de, 0x40B1
	ld	bc, 7
	ldir

	pop	bc			; restore column counter

	djnz	ScrollCharLCD_2		; column--, if not zero keep going
	ret

;------------------------------------------------------------------------------
; _getchar
;
; Parameters: none
; Returns: ASCII character code in 'l' register
;
; Waits for a scancode using the Mailstation firmware's getkeycodefrombuffer
; function (0x0A9A), then uses the two conversion tables at 'scancode_table'
; to determine the ascii character depending on the state of the shift key.
; Currently does not handle extended keys or caps lock.
;
;------------------------------------------------------------------------------
_getchar:
keyagain:
	; wait till a key is available
	ld	de, mycharbuffer
	push	de
	call	getkeycodefrombuffer
	pop	de
	jp	z, keyagain

	ld	a, (mycharbuffer+1)	; Got a scancode; check its state
	bit	0, a
	jp	z, keyagain		; if key released, we don't care, get another
	ld	a, (mycharbuffer)
	and	0x0F			; save low nibble in b
	ld	b, a
	ld	a, (mycharbuffer)
	srl	a			; save high nibble in c
	srl	a
	srl	a
	srl	a
	ld	c, a
	ld	h, 8			; hl = 8 * high nibble
	ld	e, c
	call multiply
	ld	a, b			; low nibble + (8 * high nibble)
	add	a, l
	ld	b, 0			; bc = position in scancode_table
	ld	c, a
	ld	hl, scancode_table	; hl = scancode_table + offset (starting in lowercase codes)
	add	hl, bc
	ld	a, (mycharbuffer+1)	; check if shift/capslock
	bit	6, a
	jr	nz, do_ascii_caps
	;bit	5, a			; actually don't check capslock for now, that only affects letters
	;jr	nz, get_ascii_caps
	jr	get_ascii_char		; no caps, so just get lowercase
do_ascii_caps:
	ld	bc, 80
	add	hl, bc
get_ascii_char:
	ld	a, (hl)
	or	a			; check if ascii = 0
	jr	z, print_scan_char
	cp	255		; check if ascii = 255
	jr	z, print_scan_char
	ld	a, (hl)			; print ascii code
	jr	print_ascii_char
print_scan_char:
	jp	keyagain		; Let's not deal with extended keys for now
	;jr	checkbutton
	;ld	a, 0
	;ld	a, (mycharbuffer)	; otherwise load original scan code
	;ld	l, a
	;ret
print_ascii_char:
	ret



cgafont_dataarea:
	; .ds	256			; padding bytes
	.db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
cgafont_data:
	.db 0x00, 0x7e, 0x7e, 0x36, 0x08, 0x1c, 0x08, 0x00
	.db 0xff, 0x00, 0xff, 0xf0, 0x3c, 0xfc, 0xfe, 0x18
	.db 0x01, 0x40, 0x18, 0x66, 0xfe, 0x7c, 0x00, 0x18
	.db 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x0c, 0x36, 0x36, 0x0c, 0x00, 0x1c, 0x06
	.db 0x18, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60
	.db 0x3e, 0x0c, 0x1e, 0x1e, 0x38, 0x3f, 0x1c, 0x3f
	.db 0x1e, 0x1e, 0x00, 0x00, 0x18, 0x00, 0x06, 0x1e
	.db 0x3e, 0x0c, 0x3f, 0x3c, 0x1f, 0x7f, 0x7f, 0x3c
	.db 0x33, 0x1e, 0x78, 0x67, 0x0f, 0x63, 0x63, 0x1c
	.db 0x3f, 0x1e, 0x3f, 0x1e, 0x3f, 0x33, 0x33, 0x63
	.db 0x63, 0x33, 0x7f, 0x1e, 0x03, 0x1e, 0x08, 0x00
	.db 0x0c, 0x00, 0x07, 0x00, 0x38, 0x00, 0x1c, 0x00
	.db 0x07, 0x0c, 0x30, 0x07, 0x0e, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x38, 0x18, 0x07, 0x6e, 0x00
	.db 0x1e, 0x00, 0x38, 0x7e, 0x33, 0x07, 0x0c, 0x00
	.db 0x7e, 0x33, 0x07, 0x33, 0x3e, 0x07, 0x63, 0x0c
	.db 0x38, 0x00, 0x7c, 0x1e, 0x00, 0x00, 0x1e, 0x00
	.db 0x00, 0xc3, 0x33, 0x18, 0x1c, 0x33, 0x1f, 0x70
	.db 0x38, 0x1c, 0x00, 0x00, 0x00, 0x3f, 0x3c, 0x1c
	.db 0x0c, 0x00, 0x00, 0xc3, 0xc3, 0x18, 0x00, 0x00
	.db 0x44, 0xaa, 0xdb, 0x18, 0x18, 0x18, 0x6c, 0x00
	.db 0x00, 0x6c, 0x6c, 0x00, 0x6c, 0x6c, 0x18, 0x00
	.db 0x18, 0x18, 0x00, 0x18, 0x00, 0x18, 0x18, 0x6c
	.db 0x6c, 0x00, 0x6c, 0x00, 0x6c, 0x00, 0x6c, 0x18
	.db 0x6c, 0x00, 0x00, 0x6c, 0x18, 0x00, 0x00, 0x6c
	.db 0x18, 0x18, 0x00, 0xff, 0x00, 0x0f, 0xf0, 0xff
	.db 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00
	.db 0x3f, 0x1c, 0x1c, 0x38, 0x00, 0x60, 0x1c, 0x1e
	.db 0x00, 0x0c, 0x06, 0x18, 0x70, 0x18, 0x0c, 0x00
	.db 0x1c, 0x00, 0x00, 0xf0, 0x1e, 0x0e, 0x00, 0x00


	.db 0x00, 0x81, 0xff, 0x7f, 0x1c, 0x3e, 0x08, 0x00
	.db 0xff, 0x3c, 0xc3, 0xe0, 0x66, 0xcc, 0xc6, 0xdb
	.db 0x07, 0x70, 0x3c, 0x66, 0xdb, 0xc6, 0x00, 0x3c
	.db 0x3c, 0x18, 0x18, 0x0c, 0x00, 0x24, 0x18, 0xff
	.db 0x00, 0x1e, 0x36, 0x36, 0x3e, 0x63, 0x36, 0x06
	.db 0x0c, 0x0c, 0x66, 0x0c, 0x00, 0x00, 0x00, 0x30
	.db 0x63, 0x0e, 0x33, 0x33, 0x3c, 0x03, 0x06, 0x33
	.db 0x33, 0x33, 0x0c, 0x0c, 0x0c, 0x00, 0x0c, 0x33
	.db 0x63, 0x1e, 0x66, 0x66, 0x36, 0x46, 0x46, 0x66
	.db 0x33, 0x0c, 0x30, 0x66, 0x06, 0x77, 0x67, 0x36
	.db 0x66, 0x33, 0x66, 0x33, 0x2d, 0x33, 0x33, 0x63
	.db 0x63, 0x33, 0x63, 0x06, 0x06, 0x18, 0x1c, 0x00
	.db 0x0c, 0x00, 0x06, 0x00, 0x30, 0x00, 0x36, 0x00
	.db 0x06, 0x00, 0x00, 0x06, 0x0c, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x0c, 0x18, 0x0c, 0x3b, 0x08
	.db 0x33, 0x33, 0x00, 0xc3, 0x00, 0x00, 0x0c, 0x00
	.db 0xc3, 0x00, 0x00, 0x00, 0x63, 0x00, 0x1c, 0x0c
	.db 0x00, 0x00, 0x36, 0x33, 0x33, 0x07, 0x33, 0x07
	.db 0x33, 0x18, 0x00, 0x18, 0x36, 0x33, 0x33, 0xd8
	.db 0x00, 0x00, 0x38, 0x38, 0x1f, 0x00, 0x36, 0x36
	.db 0x00, 0x00, 0x00, 0x63, 0x63, 0x18, 0xcc, 0x33
	.db 0x11, 0x55, 0xee, 0x18, 0x18, 0x18, 0x6c, 0x00
	.db 0x00, 0x6c, 0x6c, 0x00, 0x6c, 0x6c, 0x18, 0x00
	.db 0x18, 0x18, 0x00, 0x18, 0x00, 0x18, 0x18, 0x6c
	.db 0x6c, 0x00, 0x6c, 0x00, 0x6c, 0x00, 0x6c, 0x18
	.db 0x6c, 0x00, 0x00, 0x6c, 0x18, 0x00, 0x00, 0x6c
	.db 0x18, 0x18, 0x00, 0xff, 0x00, 0x0f, 0xf0, 0xff
	.db 0x00, 0x1e, 0x3f, 0x7f, 0x33, 0x00, 0x66, 0x6e
	.db 0x0c, 0x36, 0x36, 0x0c, 0x00, 0x30, 0x06, 0x33
	.db 0x3f, 0x0c, 0x0c, 0x0c, 0xd8, 0x18, 0x0c, 0x6e
	.db 0x36, 0x00, 0x00, 0x30, 0x36, 0x18, 0x00, 0x00

	.db 0x00, 0xa5, 0xdb, 0x7f, 0x3e, 0x1c, 0x1c, 0x18
	.db 0xe7, 0x66, 0x99, 0xf0, 0x66, 0xfc, 0xfe, 0x3c
	.db 0x1f, 0x7c, 0x7e, 0x66, 0xdb, 0x1c, 0x00, 0x7e
	.db 0x7e, 0x18, 0x30, 0x06, 0x03, 0x66, 0x3c, 0xff
	.db 0x00, 0x1e, 0x36, 0x7f, 0x03, 0x33, 0x1c, 0x03
	.db 0x06, 0x18, 0x3c, 0x0c, 0x00, 0x00, 0x00, 0x18
	.db 0x73, 0x0c, 0x30, 0x30, 0x36, 0x1f, 0x03, 0x30
	.db 0x33, 0x33, 0x0c, 0x0c, 0x06, 0x3f, 0x18, 0x30
	.db 0x7b, 0x33, 0x66, 0x03, 0x66, 0x16, 0x16, 0x03
	.db 0x33, 0x0c, 0x30, 0x36, 0x06, 0x7f, 0x6f, 0x63
	.db 0x66, 0x33, 0x66, 0x06, 0x0c, 0x33, 0x33, 0x63
	.db 0x36, 0x33, 0x31, 0x06, 0x0c, 0x18, 0x36, 0x00
	.db 0x18, 0x1e, 0x06, 0x1e, 0x30, 0x1e, 0x06, 0x6e
	.db 0x36, 0x0e, 0x30, 0x66, 0x0c, 0x33, 0x1f, 0x1e
	.db 0x3b, 0x6e, 0x3b, 0x3e, 0x3e, 0x33, 0x33, 0x63
	.db 0x63, 0x33, 0x3f, 0x0c, 0x18, 0x0c, 0x00, 0x1c
	.db 0x03, 0x00, 0x1e, 0x3c, 0x1e, 0x1e, 0x1e, 0x1e
	.db 0x3c, 0x1e, 0x1e, 0x0e, 0x1c, 0x0e, 0x36, 0x00
	.db 0x3f, 0xfe, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x3c, 0x33, 0x7e, 0x26, 0x1e, 0x33, 0x18
	.db 0x1e, 0x0e, 0x00, 0x00, 0x00, 0x33, 0x36, 0x36
	.db 0x0c, 0x00, 0x00, 0x33, 0x33, 0x00, 0x66, 0x66
	.db 0x44, 0xaa, 0xdb, 0x18, 0x18, 0x1f, 0x6c, 0x00
	.db 0x1f, 0x6f, 0x6c, 0x7f, 0x6f, 0x6c, 0x1f, 0x00
	.db 0x18, 0x18, 0x00, 0x18, 0x00, 0x18, 0xf8, 0x6c
	.db 0xec, 0xfc, 0xef, 0xff, 0xec, 0xff, 0xef, 0xff
	.db 0x6c, 0xff, 0x00, 0x6c, 0xf8, 0xf8, 0x00, 0x6c
	.db 0xff, 0x18, 0x00, 0xff, 0x00, 0x0f, 0xf0, 0xff
	.db 0x6e, 0x33, 0x33, 0x36, 0x06, 0x7e, 0x66, 0x3b
	.db 0x1e, 0x63, 0x63, 0x18, 0x7e, 0x7e, 0x03, 0x33
	.db 0x00, 0x3f, 0x18, 0x06, 0xd8, 0x18, 0x00, 0x3b
	.db 0x36, 0x00, 0x00, 0x30, 0x36, 0x0c, 0x3c, 0x00

	.db 0x00, 0x81, 0xff, 0x7f, 0x7f, 0x7f, 0x3e, 0x3c
	.db 0xc3, 0x42, 0xbd, 0xbe, 0x66, 0x0c, 0xc6, 0xe7
	.db 0x7f, 0x7f, 0x18, 0x66, 0xde, 0x36, 0x00, 0x18
	.db 0x18, 0x18, 0x7f, 0x7f, 0x03, 0xff, 0x7e, 0x7e
	.db 0x00, 0x0c, 0x00, 0x36, 0x1e, 0x18, 0x6e, 0x00
	.db 0x06, 0x18, 0xff, 0x3f, 0x00, 0x3f, 0x00, 0x0c
	.db 0x7b, 0x0c, 0x1c, 0x1c, 0x33, 0x30, 0x1f, 0x18
	.db 0x1e, 0x3e, 0x00, 0x00, 0x03, 0x00, 0x30, 0x18
	.db 0x7b, 0x33, 0x3e, 0x03, 0x66, 0x1e, 0x1e, 0x03
	.db 0x3f, 0x0c, 0x30, 0x1e, 0x06, 0x7f, 0x7b, 0x63
	.db 0x3e, 0x33, 0x3e, 0x0c, 0x0c, 0x33, 0x33, 0x6b
	.db 0x1c, 0x1e, 0x18, 0x06, 0x18, 0x18, 0x63, 0x00
	.db 0x00, 0x30, 0x3e, 0x33, 0x3e, 0x33, 0x0f, 0x33
	.db 0x6e, 0x0c, 0x30, 0x36, 0x0c, 0x7f, 0x33, 0x33
	.db 0x66, 0x33, 0x6e, 0x03, 0x0c, 0x33, 0x33, 0x6b
	.db 0x36, 0x33, 0x19, 0x07, 0x00, 0x38, 0x00, 0x36
	.db 0x33, 0x33, 0x33, 0x60, 0x30, 0x30, 0x30, 0x03
	.db 0x66, 0x33, 0x33, 0x0c, 0x18, 0x0c, 0x63, 0x1e
	.db 0x06, 0x30, 0x7f, 0x1e, 0x1e, 0x1e, 0x33, 0x33
	.db 0x33, 0x66, 0x33, 0x03, 0x0f, 0x3f, 0x5f, 0x3c
	.db 0x30, 0x0c, 0x1e, 0x33, 0x1f, 0x37, 0x7c, 0x1c
	.db 0x06, 0x3f, 0x3f, 0x7b, 0xdb, 0x18, 0x33, 0xcc
	.db 0x11, 0x55, 0x77, 0x18, 0x18, 0x18, 0x6c, 0x00
	.db 0x18, 0x60, 0x6c, 0x60, 0x60, 0x6c, 0x18, 0x00
	.db 0x18, 0x18, 0x00, 0x18, 0x00, 0x18, 0x18, 0x6c
	.db 0x0c, 0x0c, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00
	.db 0x6c, 0x00, 0x00, 0x6c, 0x18, 0x18, 0x00, 0x6c
	.db 0x18, 0x18, 0x00, 0xff, 0x00, 0x0f, 0xf0, 0xff
	.db 0x3b, 0x1f, 0x03, 0x36, 0x0c, 0x1b, 0x66, 0x18
	.db 0x33, 0x7f, 0x63, 0x3e, 0xdb, 0xdb, 0x1f, 0x33
	.db 0x3f, 0x0c, 0x0c, 0x0c, 0x18, 0x18, 0x3f, 0x00
	.db 0x1c, 0x18, 0x00, 0x30, 0x36, 0x06, 0x3c, 0x00

	.db 0x00, 0xbd, 0xc3, 0x3e, 0x3e, 0x7f, 0x7f, 0x3c
	.db 0xc3, 0x42, 0xbd, 0x33, 0x3c, 0x0c, 0xc6, 0xe7
	.db 0x1f, 0x7c, 0x18, 0x66, 0xd8, 0x36, 0x7e, 0x7e
	.db 0x18, 0x7e, 0x30, 0x06, 0x03, 0x66, 0xff, 0x3c
	.db 0x00, 0x0c, 0x00, 0x7f, 0x30, 0x0c, 0x3b, 0x00
	.db 0x06, 0x18, 0x3c, 0x0c, 0x00, 0x00, 0x00, 0x06
	.db 0x6f, 0x0c, 0x06, 0x30, 0x7f, 0x30, 0x33, 0x0c
	.db 0x33, 0x30, 0x00, 0x00, 0x06, 0x00, 0x18, 0x0c
	.db 0x7b, 0x3f, 0x66, 0x03, 0x66, 0x16, 0x16, 0x73
	.db 0x33, 0x0c, 0x33, 0x36, 0x46, 0x6b, 0x73, 0x63
	.db 0x06, 0x3b, 0x36, 0x18, 0x0c, 0x33, 0x33, 0x7f
	.db 0x1c, 0x0c, 0x4c, 0x06, 0x30, 0x18, 0x00, 0x00
	.db 0x00, 0x3e, 0x66, 0x03, 0x33, 0x3f, 0x06, 0x33
	.db 0x66, 0x0c, 0x30, 0x1e, 0x0c, 0x7f, 0x33, 0x33
	.db 0x66, 0x33, 0x66, 0x1e, 0x0c, 0x33, 0x33, 0x7f
	.db 0x1c, 0x33, 0x0c, 0x0c, 0x18, 0x0c, 0x00, 0x63
	.db 0x1e, 0x33, 0x3f, 0x7c, 0x3e, 0x3e, 0x3e, 0x03
	.db 0x7e, 0x3f, 0x3f, 0x0c, 0x18, 0x0c, 0x7f, 0x33
	.db 0x1e, 0xfe, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33
	.db 0x33, 0x66, 0x33, 0x03, 0x06, 0x0c, 0x63, 0x18
	.db 0x3e, 0x0c, 0x33, 0x33, 0x33, 0x3f, 0x00, 0x00
	.db 0x03, 0x03, 0x30, 0xcc, 0xec, 0x18, 0x66, 0x66
	.db 0x44, 0xaa, 0xdb, 0x18, 0x1f, 0x1f, 0x6f, 0x7f
	.db 0x1f, 0x6f, 0x6c, 0x6f, 0x7f, 0x7f, 0x1f, 0x1f
	.db 0xf8, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xf8, 0xec
	.db 0xfc, 0xec, 0xff, 0xef, 0xec, 0xff, 0xef, 0xff
	.db 0xff, 0xff, 0xff, 0xfc, 0xf8, 0xf8, 0xfc, 0xff
	.db 0xff, 0x1f, 0xf8, 0xff, 0xff, 0x0f, 0xf0, 0x00
	.db 0x13, 0x33, 0x03, 0x36, 0x06, 0x1b, 0x66, 0x18
	.db 0x33, 0x63, 0x36, 0x33, 0xdb, 0xdb, 0x03, 0x33
	.db 0x00, 0x0c, 0x06, 0x18, 0x18, 0x18, 0x00, 0x6e
	.db 0x00, 0x18, 0x18, 0x37, 0x36, 0x1e, 0x3c, 0x00

	.db 0x00, 0x99, 0xe7, 0x1c, 0x1c, 0x6b, 0x3e, 0x18
	.db 0xe7, 0x66, 0x99, 0x33, 0x18, 0x0e, 0xe6, 0x3c
	.db 0x07, 0x70, 0x7e, 0x00, 0xd8, 0x1c, 0x7e, 0x3c
	.db 0x18, 0x3c, 0x18, 0x0c, 0x7f, 0x24, 0xff, 0x18
	.db 0x00, 0x00, 0x00, 0x36, 0x1f, 0x66, 0x33, 0x00
	.db 0x0c, 0x0c, 0x66, 0x0c, 0x0c, 0x00, 0x0c, 0x03
	.db 0x67, 0x0c, 0x33, 0x33, 0x30, 0x33, 0x33, 0x0c
	.db 0x33, 0x18, 0x0c, 0x0c, 0x0c, 0x3f, 0x0c, 0x00
	.db 0x03, 0x33, 0x66, 0x66, 0x36, 0x46, 0x06, 0x66
	.db 0x33, 0x0c, 0x33, 0x66, 0x66, 0x63, 0x63, 0x36
	.db 0x06, 0x1e, 0x66, 0x33, 0x0c, 0x33, 0x1e, 0x77
	.db 0x36, 0x0c, 0x66, 0x06, 0x60, 0x18, 0x00, 0x00
	.db 0x00, 0x33, 0x66, 0x33, 0x33, 0x03, 0x06, 0x3e
	.db 0x66, 0x0c, 0x33, 0x36, 0x0c, 0x6b, 0x33, 0x33
	.db 0x3e, 0x3e, 0x06, 0x30, 0x2c, 0x33, 0x1e, 0x7f
	.db 0x36, 0x3e, 0x26, 0x0c, 0x18, 0x0c, 0x00, 0x63
	.db 0x18, 0x33, 0x03, 0x66, 0x33, 0x33, 0x33, 0x1e
	.db 0x06, 0x03, 0x03, 0x0c, 0x18, 0x0c, 0x63, 0x3f
	.db 0x06, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33
	.db 0x3e, 0x3c, 0x33, 0x7e, 0x67, 0x3f, 0xf3, 0x18
	.db 0x33, 0x0c, 0x33, 0x33, 0x33, 0x3b, 0x7e, 0x3e
	.db 0x33, 0x03, 0x30, 0x66, 0xf6, 0x18, 0xcc, 0x33
	.db 0x11, 0x55, 0xee, 0x18, 0x18, 0x18, 0x6c, 0x6c
	.db 0x18, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x18
	.db 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x6c
	.db 0x00, 0x6c, 0x00, 0x6c, 0x6c, 0x00, 0x6c, 0x00
	.db 0x00, 0x18, 0x6c, 0x00, 0x00, 0x18, 0x6c, 0x6c
	.db 0x18, 0x00, 0x18, 0xff, 0xff, 0x0f, 0xf0, 0x00
	.db 0x3b, 0x1f, 0x03, 0x36, 0x33, 0x1b, 0x3e, 0x18
	.db 0x1e, 0x36, 0x36, 0x33, 0x7e, 0x7e, 0x06, 0x33
	.db 0x3f, 0x00, 0x00, 0x00, 0x18, 0x1b, 0x0c, 0x3b
	.db 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x3c, 0x00

	.db 0x00, 0x81, 0xff, 0x08, 0x08, 0x08, 0x08, 0x00
	.db 0xff, 0x3c, 0xc3, 0x33, 0x7e, 0x0f, 0x67, 0xdb
	.db 0x01, 0x40, 0x3c, 0x66, 0xd8, 0x33, 0x7e, 0x18
	.db 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x0c, 0x00, 0x36, 0x0c, 0x63, 0x6e, 0x00
	.db 0x18, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x0c, 0x01
	.db 0x3e, 0x3f, 0x3f, 0x1e, 0x78, 0x1e, 0x1e, 0x0c
	.db 0x1e, 0x0e, 0x0c, 0x0c, 0x18, 0x00, 0x06, 0x0c
	.db 0x1e, 0x33, 0x3f, 0x3c, 0x1f, 0x7f, 0x0f, 0x7c
	.db 0x33, 0x1e, 0x1e, 0x67, 0x7f, 0x63, 0x63, 0x1c
	.db 0x0f, 0x38, 0x67, 0x1e, 0x1e, 0x3f, 0x0c, 0x63
	.db 0x63, 0x1e, 0x7f, 0x1e, 0x40, 0x1e, 0x00, 0x00
	.db 0x00, 0x6e, 0x3b, 0x1e, 0x6e, 0x1e, 0x0f, 0x30
	.db 0x67, 0x1e, 0x33, 0x67, 0x1e, 0x63, 0x33, 0x1e
	.db 0x06, 0x30, 0x0f, 0x1f, 0x18, 0x6e, 0x0c, 0x36
	.db 0x63, 0x30, 0x3f, 0x38, 0x18, 0x07, 0x00, 0x7f
	.db 0x30, 0x7e, 0x1e, 0xfc, 0x7e, 0x7e, 0x7e, 0x30
	.db 0x3c, 0x1e, 0x1e, 0x1e, 0x3c, 0x1e, 0x63, 0x33
	.db 0x3f, 0xfe, 0x73, 0x1e, 0x1e, 0x1e, 0x7e, 0x7e
	.db 0x30, 0x18, 0x1e, 0x18, 0x3f, 0x0c, 0x63, 0x1b
	.db 0x7e, 0x1e, 0x1e, 0x7e, 0x33, 0x33, 0x00, 0x00
	.db 0x1e, 0x00, 0x00, 0x33, 0xf3, 0x18, 0x00, 0x00
	.db 0x44, 0xaa, 0xdb, 0x18, 0x18, 0x18, 0x6c, 0x6c
	.db 0x18, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x18
	.db 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x6c
	.db 0x00, 0x6c, 0x00, 0x6c, 0x6c, 0x00, 0x6c, 0x00
	.db 0x00, 0x18, 0x6c, 0x00, 0x00, 0x18, 0x6c, 0x6c
	.db 0x18, 0x00, 0x18, 0xff, 0xff, 0x0f, 0xf0, 0x00
	.db 0x6e, 0x03, 0x03, 0x36, 0x3f, 0x0e, 0x06, 0x18
	.db 0x0c, 0x1c, 0x77, 0x1e, 0x00, 0x06, 0x1c, 0x33
	.db 0x00, 0x3f, 0x3f, 0x3f, 0x18, 0x1b, 0x0c, 0x00
	.db 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00

	.db 0x00, 0x7e, 0x7e, 0x00, 0x00, 0x1c, 0x1c, 0x00
	.db 0xff, 0x00, 0xff, 0x1e, 0x18, 0x07, 0x03, 0x18
	.db 0x00, 0x00, 0x18, 0x00, 0x00, 0x1e, 0x00, 0xff
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f
	.db 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x0f, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x1f, 0x00, 0x00, 0x18, 0x00, 0x0c, 0xe3, 0x0e
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0xf0, 0xc0, 0x00, 0x00, 0x00
	.db 0x11, 0x55, 0x77, 0x18, 0x18, 0x18, 0x6c, 0x6c
	.db 0x18, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x18
	.db 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x6c
	.db 0x00, 0x6c, 0x00, 0x6c, 0x6c, 0x00, 0x6c, 0x00
	.db 0x00, 0x18, 0x6c, 0x00, 0x00, 0x18, 0x6c, 0x6c
	.db 0x18, 0x00, 0x18, 0xff, 0xff, 0x0f, 0xf0, 0x00
	.db 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00
	.db 0x3f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x00, 0x18, 0x0e, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00

cgafont_data_end:
startup_slot4000device:
	.db 0,0
startup_slot4000page:
	.db 0,0
_p2shadow:
	.db 0,0,0,0
_p3shadow:
	.db 0,0,0,0
_firmwareversionsafe:
	.db 0,0
_cursorx:		; Cursor X position
	.db 0,0
_cursory:			; Cursor Y position
	.db	0,0
_textmodebuffer:		; Text screen buffer
	.db	
_cgafont_addr:			; Pointer to CGA font data (after it's moved at init)
	.db 0,0		; You could change this data via C using this
				; pointer for a dynamic font or graphics tiles.
mycharbuffer:				; Scancode buffer for _getchar
	.db	0,0
scancode_table:
	
; lowercase
	.db	000, 000, 000, 000, 000, 000, 000, 000
	.db	255, 255, 255, 064, 000, 000, 000, 000
	.db	096, 049, 050, 051, 052, 053, 054, 055
	.db	056, 057, 048, 045, 061, 008, 092, 000
	.db	009, 113, 119, 101, 114, 116, 121, 117
	.db	105, 111, 112, 091, 093, 059, 039, 013
	.db	255, 097, 115, 100, 102, 103, 104, 106
	.db	107, 108, 044, 046, 047, 000, 000, 000
	.db	255, 122, 120, 099, 118, 098, 110, 109
	.db	255, 255, 255, 032, 255, 255, 255, 000
; uppercase
	.db	000, 000, 000, 000, 000, 000, 000, 000
	.db	255, 255, 255, 064, 000, 000, 000, 000
	.db	126, 033, 064, 035, 036, 037, 094, 038
	.db	042, 040, 041, 095, 043, 008, 124, 000
	.db	009, 081, 087, 069, 082, 084, 089, 085
	.db	073, 079, 080, 123, 125, 058, 034, 013
	.db	255, 065, 083, 068, 070, 071, 072, 074
	.db	075, 076, 060, 062, 063, 000, 000, 000
	.db	255, 090, 088, 067, 086, 066, 078, 077
	.db	255, 255, 255, 032, 255, 255, 255, 000


